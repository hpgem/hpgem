//------------------------------------------------------------------------------
// File: GaussQuadratureRulesForPyramid.cpp 
// Implementation of Gauss quadrature rules for reference pyramid.
// Lars Pesch, Fri Mar  3 12:59:11 CET 2006
//----
// Modified from original file allGaussQuadratureRules.hpp
// by M.T. Julianto, Wed Feb 23 10:45:06 UTC 2013
//---------------------------------------------------------------------------
// System includes and names imported from them:
#include <cmath>
//---------------------------------------------------------------------------
// Package includes:
#include "Integration/GlobalNamespaceIntegration.hpp"
#include "Integration/QuadratureRules/GaussQuadratureRulesForPyramid.hpp"

//---------------------------------------------------------------------------
namespace QuadratureRules
{
//---------------------------------------------------------------------------
    std::string Pyramid_1_1::getName() const
        {
            return _name;
        }

    DimType  Pyramid_1_1::order() const
        {
            return 1;
        }

    DimType Pyramid_1_1::dimension() const
        {
            return 3;
        }

    DimType Pyramid_1_1::nrOfPoints() const
        {
            return 4;
        }

    NumType Pyramid_1_1::weight(DimType i) const
        {
            if (i < 4)
                return _weight[i];
            else
                throw _name + "::weight - wrong index!";
        }

    void Pyramid_1_1::getPoint(DimType i, PointReference<3>& p) const
        {
            if (i < 4)
                p=_gp[i];
            else
                throw _name + "::getPoint -  wrong index!";
        }

    Geometry::ReferenceGeometry<3>* Pyramid_1_1::forReferenceGeometry() const
        {
            return _refGeoPtr;
        }

    Pyramid_1_1::Pyramid_1_1()
     : _name("Pyramid_1_1"),
       _refGeoPtr(&ReferencePyramid::Instance())
            {
                _weight[0] = (( 2.0 ) * ( 2.0 )) * (0.1108884156);
                _gp[0][0] = (0.0) * (1. - (0.4850054945e-1));
                _gp[0][1] = (0.0) * (1. - (0.4850054945e-1));
                _gp[0][2] = 0.4850054945e-1;

                _weight[1] = (( 2.0 ) * ( 2.0 )) * (0.1434587898);
                _gp[1][0] = (0.0) * (1. - (0.2386007376));
                _gp[1][1] = (0.0) * (1. - (0.2386007376));
                _gp[1][2] = 0.2386007376;

                _weight[2] = (( 2.0 ) * ( 2.0 )) * (0.6863388717e-1);
                _gp[2][0] = (0.0) * (1. - (0.5170472951));
                _gp[2][1] = (0.0) * (1. - (0.5170472951));
                _gp[2][2] = 0.5170472951;

                _weight[3] = (( 2.0 ) * ( 2.0 )) * (0.1035224075e-1);
                _gp[3][0] = (0.0) * (1. - (0.7958514179));
                _gp[3][1] = (0.0) * (1. - (0.7958514179));
                _gp[3][2] = 0.7958514179;

                _refGeoPtr->addGaussQuadratureRule(this);
            }

    Pyramid_1_1::~Pyramid_1_1()
          {}

    namespace
    {
        const Pyramid_1_1& instantiatePyramid_1_1 = Pyramid_1_1::Instance();
    }
//---------------------------------------------------------------------------
    std::string Pyramid_3_1::getName() const
        {
            return _name;
        }

    DimType  Pyramid_3_1::order() const
        {
            return 3;
        }

    DimType Pyramid_3_1::dimension() const
        {
            return 3;
        }

    DimType Pyramid_3_1::nrOfPoints() const
        {
            return 16;
        }

    NumType Pyramid_3_1::weight(DimType i) const
        {
            if (i < 16)
                return _weight[i];
            else
                throw _name + "::weight - wrong index!";
        }

    void Pyramid_3_1::getPoint(DimType i, PointReference<3>& p) const
        {
            if (i < 16)
                p=_gp[i];
            else
                throw _name + "::getPoint -  wrong index!";
        }

    Geometry::ReferenceGeometry<3>* Pyramid_3_1::forReferenceGeometry() const
        {
            return _refGeoPtr;
        }

    Pyramid_3_1::Pyramid_3_1()
     : _name("Pyramid_3_1"),
       _refGeoPtr(&ReferencePyramid::Instance())
            {
                _weight[0] = (( 1.0 ) * ( 1.0 )) * (0.1108884156);
                _gp[0][0] = (-sqrt(3.0) / 3.0) * (1. - (0.4850054945e-1));
                _gp[0][1] = (-sqrt(3.0) / 3.0) * (1. - (0.4850054945e-1));
                _gp[0][2] = 0.4850054945e-1;

                _weight[1] = (( 1.0 ) * ( 1.0 )) * (0.1108884156);
                _gp[1][0] = (+sqrt(3.0) / 3.0) * (1. - (0.4850054945e-1));
                _gp[1][1] = (-sqrt(3.0) / 3.0) * (1. - (0.4850054945e-1));
                _gp[1][2] = 0.4850054945e-1;

                _weight[2] = (( 1.0 ) * ( 1.0 )) * (0.1108884156);
                _gp[2][0] = (-sqrt(3.0) / 3.0) * (1. - (0.4850054945e-1));
                _gp[2][1] = (+sqrt(3.0) / 3.0) * (1. - (0.4850054945e-1));
                _gp[2][2] = 0.4850054945e-1;

                _weight[3] = (( 1.0 ) * ( 1.0 )) * (0.1108884156);
                _gp[3][0] = (+sqrt(3.0) / 3.0) * (1. - (0.4850054945e-1));
                _gp[3][1] = (+sqrt(3.0) / 3.0) * (1. - (0.4850054945e-1));
                _gp[3][2] = 0.4850054945e-1;

                _weight[4] = (( 1.0 ) * ( 1.0 )) * (0.1434587898);
                _gp[4][0] = (-sqrt(3.0) / 3.0) * (1. - (0.2386007376));
                _gp[4][1] = (-sqrt(3.0) / 3.0) * (1. - (0.2386007376));
                _gp[4][2] = 0.2386007376;

                _weight[5] = (( 1.0 ) * ( 1.0 )) * (0.1434587898);
                _gp[5][0] = (+sqrt(3.0) / 3.0) * (1. - (0.2386007376));
                _gp[5][1] = (-sqrt(3.0) / 3.0) * (1. - (0.2386007376));
                _gp[5][2] = 0.2386007376;

                _weight[6] = (( 1.0 ) * ( 1.0 )) * (0.1434587898);
                _gp[6][0] = (-sqrt(3.0) / 3.0) * (1. - (0.2386007376));
                _gp[6][1] = (+sqrt(3.0) / 3.0) * (1. - (0.2386007376));
                _gp[6][2] = 0.2386007376;

                _weight[7] = (( 1.0 ) * ( 1.0 )) * (0.1434587898);
                _gp[7][0] = (+sqrt(3.0) / 3.0) * (1. - (0.2386007376));
                _gp[7][1] = (+sqrt(3.0) / 3.0) * (1. - (0.2386007376));
                _gp[7][2] = 0.2386007376;

                _weight[8] = (( 1.0 ) * ( 1.0 )) * (0.6863388717e-1);
                _gp[8][0] = (-sqrt(3.0) / 3.0) * (1. - (0.5170472951));
                _gp[8][1] = (-sqrt(3.0) / 3.0) * (1. - (0.5170472951));
                _gp[8][2] = 0.5170472951;

                _weight[9] = (( 1.0 ) * ( 1.0 )) * (0.6863388717e-1);
                _gp[9][0] = (+sqrt(3.0) / 3.0) * (1. - (0.5170472951));
                _gp[9][1] = (-sqrt(3.0) / 3.0) * (1. - (0.5170472951));
                _gp[9][2] = 0.5170472951;

                _weight[10] = (( 1.0 ) * ( 1.0 )) * (0.6863388717e-1);
                _gp[10][0] = (-sqrt(3.0) / 3.0) * (1. - (0.5170472951));
                _gp[10][1] = (+sqrt(3.0) / 3.0) * (1. - (0.5170472951));
                _gp[10][2] = 0.5170472951;

                _weight[11] = (( 1.0 ) * ( 1.0 )) * (0.6863388717e-1);
                _gp[11][0] = (+sqrt(3.0) / 3.0) * (1. - (0.5170472951));
                _gp[11][1] = (+sqrt(3.0) / 3.0) * (1. - (0.5170472951));
                _gp[11][2] = 0.5170472951;

                _weight[12] = (( 1.0 ) * ( 1.0 )) * (0.1035224075e-1);
                _gp[12][0] = (-sqrt(3.0) / 3.0) * (1. - (0.7958514179));
                _gp[12][1] = (-sqrt(3.0) / 3.0) * (1. - (0.7958514179));
                _gp[12][2] = 0.7958514179;

                _weight[13] = (( 1.0 ) * ( 1.0 )) * (0.1035224075e-1);
                _gp[13][0] = (+sqrt(3.0) / 3.0) * (1. - (0.7958514179));
                _gp[13][1] = (-sqrt(3.0) / 3.0) * (1. - (0.7958514179));
                _gp[13][2] = 0.7958514179;

                _weight[14] = (( 1.0 ) * ( 1.0 )) * (0.1035224075e-1);
                _gp[14][0] = (-sqrt(3.0) / 3.0) * (1. - (0.7958514179));
                _gp[14][1] = (+sqrt(3.0) / 3.0) * (1. - (0.7958514179));
                _gp[14][2] = 0.7958514179;

                _weight[15] = (( 1.0 ) * ( 1.0 )) * (0.1035224075e-1);
                _gp[15][0] = (+sqrt(3.0) / 3.0) * (1. - (0.7958514179));
                _gp[15][1] = (+sqrt(3.0) / 3.0) * (1. - (0.7958514179));
                _gp[15][2] = 0.7958514179;

                _refGeoPtr->addGaussQuadratureRule(this);
            }

    Pyramid_3_1::~Pyramid_3_1()
          {}

    namespace
    {
        const Pyramid_3_1& instantiatePyramid_3_1 = Pyramid_3_1::Instance();
    }
//---------------------------------------------------------------------------
    std::string Pyramid_5_1::getName() const
        {
            return _name;
        }

    DimType  Pyramid_5_1::order() const
        {
            return 5;
        }

    DimType Pyramid_5_1::dimension() const
        {
            return 3;
        }

    DimType Pyramid_5_1::nrOfPoints() const
        {
            return 36;
        }

    NumType Pyramid_5_1::weight(DimType i) const
        {
            if (i < 36)
                return _weight[i];
            else
                throw _name + "::weight - wrong index!";
        }

    void Pyramid_5_1::getPoint(DimType i, PointReference<3>& p) const
        {
            if (i < 36)
                p=_gp[i];
            else
                throw _name + "::getPoint -  wrong index!";
        }

    Geometry::ReferenceGeometry<3>* Pyramid_5_1::forReferenceGeometry() const
        {
            return _refGeoPtr;
        }

    Pyramid_5_1::Pyramid_5_1()
     : _name("Pyramid_5_1"),
       _refGeoPtr(&ReferencePyramid::Instance())
            {
                _weight[0] = (( 5. / 9. ) * ( 5. / 9. )) * (0.1108884156);
                _gp[0][0] = (-sqrt(3.0 / 5.0)) * (1. - (0.4850054945e-1));
                _gp[0][1] = (-sqrt(3.0 / 5.0)) * (1. - (0.4850054945e-1));
                _gp[0][2] = 0.4850054945e-1;

                _weight[1] = (( 8. / 9. ) * ( 5. / 9. )) * (0.1108884156);
                _gp[1][0] = (0.0) * (1. - (0.4850054945e-1));
                _gp[1][1] = (-sqrt(3.0 / 5.0)) * (1. - (0.4850054945e-1));
                _gp[1][2] = 0.4850054945e-1;

                _weight[2] = (( 5. / 9. ) * ( 5. / 9. )) * (0.1108884156);
                _gp[2][0] = (+sqrt(3.0 / 5.0)) * (1. - (0.4850054945e-1));
                _gp[2][1] = (-sqrt(3.0 / 5.0)) * (1. - (0.4850054945e-1));
                _gp[2][2] = 0.4850054945e-1;

                _weight[3] = (( 5. / 9. ) * ( 8. / 9. )) * (0.1108884156);
                _gp[3][0] = (-sqrt(3.0 / 5.0)) * (1. - (0.4850054945e-1));
                _gp[3][1] = (0.0) * (1. - (0.4850054945e-1));
                _gp[3][2] = 0.4850054945e-1;

                _weight[4] = (( 8. / 9. ) * ( 8. / 9. )) * (0.1108884156);
                _gp[4][0] = (0.0) * (1. - (0.4850054945e-1));
                _gp[4][1] = (0.0) * (1. - (0.4850054945e-1));
                _gp[4][2] = 0.4850054945e-1;

                _weight[5] = (( 5. / 9. ) * ( 8. / 9. )) * (0.1108884156);
                _gp[5][0] = (+sqrt(3.0 / 5.0)) * (1. - (0.4850054945e-1));
                _gp[5][1] = (0.0) * (1. - (0.4850054945e-1));
                _gp[5][2] = 0.4850054945e-1;

                _weight[6] = (( 5. / 9. ) * ( 5. / 9. )) * (0.1108884156);
                _gp[6][0] = (-sqrt(3.0 / 5.0)) * (1. - (0.4850054945e-1));
                _gp[6][1] = (+sqrt(3.0 / 5.0)) * (1. - (0.4850054945e-1));
                _gp[6][2] = 0.4850054945e-1;

                _weight[7] = (( 8. / 9. ) * ( 5. / 9. )) * (0.1108884156);
                _gp[7][0] = (0.0) * (1. - (0.4850054945e-1));
                _gp[7][1] = (+sqrt(3.0 / 5.0)) * (1. - (0.4850054945e-1));
                _gp[7][2] = 0.4850054945e-1;

                _weight[8] = (( 5. / 9. ) * ( 5. / 9. )) * (0.1108884156);
                _gp[8][0] = (+sqrt(3.0 / 5.0)) * (1. - (0.4850054945e-1));
                _gp[8][1] = (+sqrt(3.0 / 5.0)) * (1. - (0.4850054945e-1));
                _gp[8][2] = 0.4850054945e-1;

                _weight[9] = (( 5. / 9. ) * ( 5. / 9. )) * (0.1434587898);
                _gp[9][0] = (-sqrt(3.0 / 5.0)) * (1. - (0.2386007376));
                _gp[9][1] = (-sqrt(3.0 / 5.0)) * (1. - (0.2386007376));
                _gp[9][2] = 0.2386007376;

                _weight[10] = (( 8. / 9. ) * ( 5. / 9. )) * (0.1434587898);
                _gp[10][0] = (0.0) * (1. - (0.2386007376));
                _gp[10][1] = (-sqrt(3.0 / 5.0)) * (1. - (0.2386007376));
                _gp[10][2] = 0.2386007376;

                _weight[11] = (( 5. / 9. ) * ( 5. / 9. )) * (0.1434587898);
                _gp[11][0] = (+sqrt(3.0 / 5.0)) * (1. - (0.2386007376));
                _gp[11][1] = (-sqrt(3.0 / 5.0)) * (1. - (0.2386007376));
                _gp[11][2] = 0.2386007376;

                _weight[12] = (( 5. / 9. ) * ( 8. / 9. )) * (0.1434587898);
                _gp[12][0] = (-sqrt(3.0 / 5.0)) * (1. - (0.2386007376));
                _gp[12][1] = (0.0) * (1. - (0.2386007376));
                _gp[12][2] = 0.2386007376;

                _weight[13] = (( 8. / 9. ) * ( 8. / 9. )) * (0.1434587898);
                _gp[13][0] = (0.0) * (1. - (0.2386007376));
                _gp[13][1] = (0.0) * (1. - (0.2386007376));
                _gp[13][2] = 0.2386007376;

                _weight[14] = (( 5. / 9. ) * ( 8. / 9. )) * (0.1434587898);
                _gp[14][0] = (+sqrt(3.0 / 5.0)) * (1. - (0.2386007376));
                _gp[14][1] = (0.0) * (1. - (0.2386007376));
                _gp[14][2] = 0.2386007376;

                _weight[15] = (( 5. / 9. ) * ( 5. / 9. )) * (0.1434587898);
                _gp[15][0] = (-sqrt(3.0 / 5.0)) * (1. - (0.2386007376));
                _gp[15][1] = (+sqrt(3.0 / 5.0)) * (1. - (0.2386007376));
                _gp[15][2] = 0.2386007376;

                _weight[16] = (( 8. / 9. ) * ( 5. / 9. )) * (0.1434587898);
                _gp[16][0] = (0.0) * (1. - (0.2386007376));
                _gp[16][1] = (+sqrt(3.0 / 5.0)) * (1. - (0.2386007376));
                _gp[16][2] = 0.2386007376;

                _weight[17] = (( 5. / 9. ) * ( 5. / 9. )) * (0.1434587898);
                _gp[17][0] = (+sqrt(3.0 / 5.0)) * (1. - (0.2386007376));
                _gp[17][1] = (+sqrt(3.0 / 5.0)) * (1. - (0.2386007376));
                _gp[17][2] = 0.2386007376;

                _weight[18] = (( 5. / 9. ) * ( 5. / 9. )) * (0.6863388717e-1);
                _gp[18][0] = (-sqrt(3.0 / 5.0)) * (1. - (0.5170472951));
                _gp[18][1] = (-sqrt(3.0 / 5.0)) * (1. - (0.5170472951));
                _gp[18][2] = 0.5170472951;

                _weight[19] = (( 8. / 9. ) * ( 5. / 9. )) * (0.6863388717e-1);
                _gp[19][0] = (0.0) * (1. - (0.5170472951));
                _gp[19][1] = (-sqrt(3.0 / 5.0)) * (1. - (0.5170472951));
                _gp[19][2] = 0.5170472951;

                _weight[20] = (( 5. / 9. ) * ( 5. / 9. )) * (0.6863388717e-1);
                _gp[20][0] = (+sqrt(3.0 / 5.0)) * (1. - (0.5170472951));
                _gp[20][1] = (-sqrt(3.0 / 5.0)) * (1. - (0.5170472951));
                _gp[20][2] = 0.5170472951;

                _weight[21] = (( 5. / 9. ) * ( 8. / 9. )) * (0.6863388717e-1);
                _gp[21][0] = (-sqrt(3.0 / 5.0)) * (1. - (0.5170472951));
                _gp[21][1] = (0.0) * (1. - (0.5170472951));
                _gp[21][2] = 0.5170472951;

                _weight[22] = (( 8. / 9. ) * ( 8. / 9. )) * (0.6863388717e-1);
                _gp[22][0] = (0.0) * (1. - (0.5170472951));
                _gp[22][1] = (0.0) * (1. - (0.5170472951));
                _gp[22][2] = 0.5170472951;

                _weight[23] = (( 5. / 9. ) * ( 8. / 9. )) * (0.6863388717e-1);
                _gp[23][0] = (+sqrt(3.0 / 5.0)) * (1. - (0.5170472951));
                _gp[23][1] = (0.0) * (1. - (0.5170472951));
                _gp[23][2] = 0.5170472951;

                _weight[24] = (( 5. / 9. ) * ( 5. / 9. )) * (0.6863388717e-1);
                _gp[24][0] = (-sqrt(3.0 / 5.0)) * (1. - (0.5170472951));
                _gp[24][1] = (+sqrt(3.0 / 5.0)) * (1. - (0.5170472951));
                _gp[24][2] = 0.5170472951;

                _weight[25] = (( 8. / 9. ) * ( 5. / 9. )) * (0.6863388717e-1);
                _gp[25][0] = (0.0) * (1. - (0.5170472951));
                _gp[25][1] = (+sqrt(3.0 / 5.0)) * (1. - (0.5170472951));
                _gp[25][2] = 0.5170472951;

                _weight[26] = (( 5. / 9. ) * ( 5. / 9. )) * (0.6863388717e-1);
                _gp[26][0] = (+sqrt(3.0 / 5.0)) * (1. - (0.5170472951));
                _gp[26][1] = (+sqrt(3.0 / 5.0)) * (1. - (0.5170472951));
                _gp[26][2] = 0.5170472951;

                _weight[27] = (( 5. / 9. ) * ( 5. / 9. )) * (0.1035224075e-1);
                _gp[27][0] = (-sqrt(3.0 / 5.0)) * (1. - (0.7958514179));
                _gp[27][1] = (-sqrt(3.0 / 5.0)) * (1. - (0.7958514179));
                _gp[27][2] = 0.7958514179;

                _weight[28] = (( 8. / 9. ) * ( 5. / 9. )) * (0.1035224075e-1);
                _gp[28][0] = (0.0) * (1. - (0.7958514179));
                _gp[28][1] = (-sqrt(3.0 / 5.0)) * (1. - (0.7958514179));
                _gp[28][2] = 0.7958514179;

                _weight[29] = (( 5. / 9. ) * ( 5. / 9. )) * (0.1035224075e-1);
                _gp[29][0] = (+sqrt(3.0 / 5.0)) * (1. - (0.7958514179));
                _gp[29][1] = (-sqrt(3.0 / 5.0)) * (1. - (0.7958514179));
                _gp[29][2] = 0.7958514179;

                _weight[30] = (( 5. / 9. ) * ( 8. / 9. )) * (0.1035224075e-1);
                _gp[30][0] = (-sqrt(3.0 / 5.0)) * (1. - (0.7958514179));
                _gp[30][1] = (0.0) * (1. - (0.7958514179));
                _gp[30][2] = 0.7958514179;

                _weight[31] = (( 8. / 9. ) * ( 8. / 9. )) * (0.1035224075e-1);
                _gp[31][0] = (0.0) * (1. - (0.7958514179));
                _gp[31][1] = (0.0) * (1. - (0.7958514179));
                _gp[31][2] = 0.7958514179;

                _weight[32] = (( 5. / 9. ) * ( 8. / 9. )) * (0.1035224075e-1);
                _gp[32][0] = (+sqrt(3.0 / 5.0)) * (1. - (0.7958514179));
                _gp[32][1] = (0.0) * (1. - (0.7958514179));
                _gp[32][2] = 0.7958514179;

                _weight[33] = (( 5. / 9. ) * ( 5. / 9. )) * (0.1035224075e-1);
                _gp[33][0] = (-sqrt(3.0 / 5.0)) * (1. - (0.7958514179));
                _gp[33][1] = (+sqrt(3.0 / 5.0)) * (1. - (0.7958514179));
                _gp[33][2] = 0.7958514179;

                _weight[34] = (( 8. / 9. ) * ( 5. / 9. )) * (0.1035224075e-1);
                _gp[34][0] = (0.0) * (1. - (0.7958514179));
                _gp[34][1] = (+sqrt(3.0 / 5.0)) * (1. - (0.7958514179));
                _gp[34][2] = 0.7958514179;

                _weight[35] = (( 5. / 9. ) * ( 5. / 9. )) * (0.1035224075e-1);
                _gp[35][0] = (+sqrt(3.0 / 5.0)) * (1. - (0.7958514179));
                _gp[35][1] = (+sqrt(3.0 / 5.0)) * (1. - (0.7958514179));
                _gp[35][2] = 0.7958514179;

                _refGeoPtr->addGaussQuadratureRule(this);
            }

    Pyramid_5_1::~Pyramid_5_1()
          {}

    namespace
    {
        const Pyramid_5_1& instantiatePyramid_5_1 = Pyramid_5_1::Instance();
    }
//---------------------------------------------------------------------------
    std::string Pyramid_7_1::getName() const
        {
            return _name;
        }

    DimType  Pyramid_7_1::order() const
        {
            return 7;
        }

    DimType Pyramid_7_1::dimension() const
        {
            return 3;
        }

    DimType Pyramid_7_1::nrOfPoints() const
        {
            return 48;
        }

    NumType Pyramid_7_1::weight(DimType i) const
        {
            if (i < 48)
                return _weight[i];
            else
                throw _name + "::weight - wrong index!";
        }

    void Pyramid_7_1::getPoint(DimType i, PointReference<3>& p) const
        {
            if (i < 48)
                p=_gp[i];
            else
                throw _name + "::getPoint -  wrong index!";
        }

    Geometry::ReferenceGeometry<3>* Pyramid_7_1::forReferenceGeometry() const
        {
            return _refGeoPtr;
        }

    Pyramid_7_1::Pyramid_7_1()
     : _name("Pyramid_7_1"),
       _refGeoPtr(&ReferencePyramid::Instance())
            {
                _weight[0] = (98. / 405.) * (0.1108884156);
                _gp[0][0] = (+(sqrt(6. / 7.))) * (1. - (0.4850054945e-1));
                _gp[0][1] = (0.) * (1. - (0.4850054945e-1));
                _gp[0][2] = 0.4850054945e-1;

                _weight[1] = (98. / 405.) * (0.1108884156);
                _gp[1][0] = (-(sqrt(6. / 7.))) * (1. - (0.4850054945e-1));
                _gp[1][1] = (0.) * (1. - (0.4850054945e-1));
                _gp[1][2] = 0.4850054945e-1;

                _weight[2] = (98. / 405.) * (0.1108884156);
                _gp[2][0] = (0.) * (1. - (0.4850054945e-1));
                _gp[2][1] = (+(sqrt(6. / 7.))) * (1. - (0.4850054945e-1));
                _gp[2][2] = 0.4850054945e-1;

                _weight[3] = (98. / 405.) * (0.1108884156);
                _gp[3][0] = (0.) * (1. - (0.4850054945e-1));
                _gp[3][1] = (-(sqrt(6. / 7.))) * (1. - (0.4850054945e-1));
                _gp[3][2] = 0.4850054945e-1;

                _weight[4] = ((178981. + 2769. * sqrt(583.)) / 472230.) * (0.1108884156);
                _gp[4][0] = (+(sqrt((114. - 3. * sqrt(583.)) / 287.))) * (1. - (0.4850054945e-1));
                _gp[4][1] = (+(sqrt((114. - 3. * sqrt(583.)) / 287.))) * (1. - (0.4850054945e-1));
                _gp[4][2] = 0.4850054945e-1;

                _weight[5] = ((178981. + 2769. * sqrt(583.)) / 472230.) * (0.1108884156);
                _gp[5][0] = (+(sqrt((114. - 3. * sqrt(583.)) / 287.))) * (1. - (0.4850054945e-1));
                _gp[5][1] = (-(sqrt((114. - 3. * sqrt(583.)) / 287.))) * (1. - (0.4850054945e-1));
                _gp[5][2] = 0.4850054945e-1;

                _weight[6] = ((178981. + 2769. * sqrt(583.)) / 472230.) * (0.1108884156);
                _gp[6][0] = (-(sqrt((114. - 3. * sqrt(583.)) / 287.))) * (1. - (0.4850054945e-1));
                _gp[6][1] = (+(sqrt((114. - 3. * sqrt(583.)) / 287.))) * (1. - (0.4850054945e-1));
                _gp[6][2] = 0.4850054945e-1;

                _weight[7] = ((178981. + 2769. * sqrt(583.)) / 472230.) * (0.1108884156);
                _gp[7][0] = (-(sqrt((114. - 3. * sqrt(583.)) / 287.))) * (1. - (0.4850054945e-1));
                _gp[7][1] = (-(sqrt((114. - 3. * sqrt(583.)) / 287.))) * (1. - (0.4850054945e-1));
                _gp[7][2] = 0.4850054945e-1;

                _weight[8] = ((178981. - 2769. * sqrt(583.)) / 472230.) * (0.1108884156);
                _gp[8][0] = (+(sqrt((114. + 3. * sqrt(583.)) / 287.))) * (1. - (0.4850054945e-1));
                _gp[8][1] = (+(sqrt((114. + 3. * sqrt(583.)) / 287.))) * (1. - (0.4850054945e-1));
                _gp[8][2] = 0.4850054945e-1;

                _weight[9] = ((178981. - 2769. * sqrt(583.)) / 472230.) * (0.1108884156);
                _gp[9][0] = (+(sqrt((114. + 3. * sqrt(583.)) / 287.))) * (1. - (0.4850054945e-1));
                _gp[9][1] = (-(sqrt((114. + 3. * sqrt(583.)) / 287.))) * (1. - (0.4850054945e-1));
                _gp[9][2] = 0.4850054945e-1;

                _weight[10] = ((178981. - 2769. * sqrt(583.)) / 472230.) * (0.1108884156);
                _gp[10][0] = (-(sqrt((114. + 3. * sqrt(583.)) / 287.))) * (1. - (0.4850054945e-1));
                _gp[10][1] = (+(sqrt((114. + 3. * sqrt(583.)) / 287.))) * (1. - (0.4850054945e-1));
                _gp[10][2] = 0.4850054945e-1;

                _weight[11] = ((178981. - 2769. * sqrt(583.)) / 472230.) * (0.1108884156);
                _gp[11][0] = (-(sqrt((114. + 3. * sqrt(583.)) / 287.))) * (1. - (0.4850054945e-1));
                _gp[11][1] = (-(sqrt((114. + 3. * sqrt(583.)) / 287.))) * (1. - (0.4850054945e-1));
                _gp[11][2] = 0.4850054945e-1;

                _weight[12] = (98. / 405.) * (0.1434587898);
                _gp[12][0] = (+(sqrt(6. / 7.))) * (1. - (0.2386007376));
                _gp[12][1] = (0.) * (1. - (0.2386007376));
                _gp[12][2] = 0.2386007376;

                _weight[13] = (98. / 405.) * (0.1434587898);
                _gp[13][0] = (-(sqrt(6. / 7.))) * (1. - (0.2386007376));
                _gp[13][1] = (0.) * (1. - (0.2386007376));
                _gp[13][2] = 0.2386007376;

                _weight[14] = (98. / 405.) * (0.1434587898);
                _gp[14][0] = (0.) * (1. - (0.2386007376));
                _gp[14][1] = (+(sqrt(6. / 7.))) * (1. - (0.2386007376));
                _gp[14][2] = 0.2386007376;

                _weight[15] = (98. / 405.) * (0.1434587898);
                _gp[15][0] = (0.) * (1. - (0.2386007376));
                _gp[15][1] = (-(sqrt(6. / 7.))) * (1. - (0.2386007376));
                _gp[15][2] = 0.2386007376;

                _weight[16] = ((178981. + 2769. * sqrt(583.)) / 472230.) * (0.1434587898);
                _gp[16][0] = (+(sqrt((114. - 3. * sqrt(583.)) / 287.))) * (1. - (0.2386007376));
                _gp[16][1] = (+(sqrt((114. - 3. * sqrt(583.)) / 287.))) * (1. - (0.2386007376));
                _gp[16][2] = 0.2386007376;

                _weight[17] = ((178981. + 2769. * sqrt(583.)) / 472230.) * (0.1434587898);
                _gp[17][0] = (+(sqrt((114. - 3. * sqrt(583.)) / 287.))) * (1. - (0.2386007376));
                _gp[17][1] = (-(sqrt((114. - 3. * sqrt(583.)) / 287.))) * (1. - (0.2386007376));
                _gp[17][2] = 0.2386007376;

                _weight[18] = ((178981. + 2769. * sqrt(583.)) / 472230.) * (0.1434587898);
                _gp[18][0] = (-(sqrt((114. - 3. * sqrt(583.)) / 287.))) * (1. - (0.2386007376));
                _gp[18][1] = (+(sqrt((114. - 3. * sqrt(583.)) / 287.))) * (1. - (0.2386007376));
                _gp[18][2] = 0.2386007376;

                _weight[19] = ((178981. + 2769. * sqrt(583.)) / 472230.) * (0.1434587898);
                _gp[19][0] = (-(sqrt((114. - 3. * sqrt(583.)) / 287.))) * (1. - (0.2386007376));
                _gp[19][1] = (-(sqrt((114. - 3. * sqrt(583.)) / 287.))) * (1. - (0.2386007376));
                _gp[19][2] = 0.2386007376;

                _weight[20] = ((178981. - 2769. * sqrt(583.)) / 472230.) * (0.1434587898);
                _gp[20][0] = (+(sqrt((114. + 3. * sqrt(583.)) / 287.))) * (1. - (0.2386007376));
                _gp[20][1] = (+(sqrt((114. + 3. * sqrt(583.)) / 287.))) * (1. - (0.2386007376));
                _gp[20][2] = 0.2386007376;

                _weight[21] = ((178981. - 2769. * sqrt(583.)) / 472230.) * (0.1434587898);
                _gp[21][0] = (+(sqrt((114. + 3. * sqrt(583.)) / 287.))) * (1. - (0.2386007376));
                _gp[21][1] = (-(sqrt((114. + 3. * sqrt(583.)) / 287.))) * (1. - (0.2386007376));
                _gp[21][2] = 0.2386007376;

                _weight[22] = ((178981. - 2769. * sqrt(583.)) / 472230.) * (0.1434587898);
                _gp[22][0] = (-(sqrt((114. + 3. * sqrt(583.)) / 287.))) * (1. - (0.2386007376));
                _gp[22][1] = (+(sqrt((114. + 3. * sqrt(583.)) / 287.))) * (1. - (0.2386007376));
                _gp[22][2] = 0.2386007376;

                _weight[23] = ((178981. - 2769. * sqrt(583.)) / 472230.) * (0.1434587898);
                _gp[23][0] = (-(sqrt((114. + 3. * sqrt(583.)) / 287.))) * (1. - (0.2386007376));
                _gp[23][1] = (-(sqrt((114. + 3. * sqrt(583.)) / 287.))) * (1. - (0.2386007376));
                _gp[23][2] = 0.2386007376;

                _weight[24] = (98. / 405.) * (0.6863388717e-1);
                _gp[24][0] = (+(sqrt(6. / 7.))) * (1. - (0.5170472951));
                _gp[24][1] = (0.) * (1. - (0.5170472951));
                _gp[24][2] = 0.5170472951;

                _weight[25] = (98. / 405.) * (0.6863388717e-1);
                _gp[25][0] = (-(sqrt(6. / 7.))) * (1. - (0.5170472951));
                _gp[25][1] = (0.) * (1. - (0.5170472951));
                _gp[25][2] = 0.5170472951;

                _weight[26] = (98. / 405.) * (0.6863388717e-1);
                _gp[26][0] = (0.) * (1. - (0.5170472951));
                _gp[26][1] = (+(sqrt(6. / 7.))) * (1. - (0.5170472951));
                _gp[26][2] = 0.5170472951;

                _weight[27] = (98. / 405.) * (0.6863388717e-1);
                _gp[27][0] = (0.) * (1. - (0.5170472951));
                _gp[27][1] = (-(sqrt(6. / 7.))) * (1. - (0.5170472951));
                _gp[27][2] = 0.5170472951;

                _weight[28] = ((178981. + 2769. * sqrt(583.)) / 472230.) * (0.6863388717e-1);
                _gp[28][0] = (+(sqrt((114. - 3. * sqrt(583.)) / 287.))) * (1. - (0.5170472951));
                _gp[28][1] = (+(sqrt((114. - 3. * sqrt(583.)) / 287.))) * (1. - (0.5170472951));
                _gp[28][2] = 0.5170472951;

                _weight[29] = ((178981. + 2769. * sqrt(583.)) / 472230.) * (0.6863388717e-1);
                _gp[29][0] = (+(sqrt((114. - 3. * sqrt(583.)) / 287.))) * (1. - (0.5170472951));
                _gp[29][1] = (-(sqrt((114. - 3. * sqrt(583.)) / 287.))) * (1. - (0.5170472951));
                _gp[29][2] = 0.5170472951;

                _weight[30] = ((178981. + 2769. * sqrt(583.)) / 472230.) * (0.6863388717e-1);
                _gp[30][0] = (-(sqrt((114. - 3. * sqrt(583.)) / 287.))) * (1. - (0.5170472951));
                _gp[30][1] = (+(sqrt((114. - 3. * sqrt(583.)) / 287.))) * (1. - (0.5170472951));
                _gp[30][2] = 0.5170472951;

                _weight[31] = ((178981. + 2769. * sqrt(583.)) / 472230.) * (0.6863388717e-1);
                _gp[31][0] = (-(sqrt((114. - 3. * sqrt(583.)) / 287.))) * (1. - (0.5170472951));
                _gp[31][1] = (-(sqrt((114. - 3. * sqrt(583.)) / 287.))) * (1. - (0.5170472951));
                _gp[31][2] = 0.5170472951;

                _weight[32] = ((178981. - 2769. * sqrt(583.)) / 472230.) * (0.6863388717e-1);
                _gp[32][0] = (+(sqrt((114. + 3. * sqrt(583.)) / 287.))) * (1. - (0.5170472951));
                _gp[32][1] = (+(sqrt((114. + 3. * sqrt(583.)) / 287.))) * (1. - (0.5170472951));
                _gp[32][2] = 0.5170472951;

                _weight[33] = ((178981. - 2769. * sqrt(583.)) / 472230.) * (0.6863388717e-1);
                _gp[33][0] = (+(sqrt((114. + 3. * sqrt(583.)) / 287.))) * (1. - (0.5170472951));
                _gp[33][1] = (-(sqrt((114. + 3. * sqrt(583.)) / 287.))) * (1. - (0.5170472951));
                _gp[33][2] = 0.5170472951;

                _weight[34] = ((178981. - 2769. * sqrt(583.)) / 472230.) * (0.6863388717e-1);
                _gp[34][0] = (-(sqrt((114. + 3. * sqrt(583.)) / 287.))) * (1. - (0.5170472951));
                _gp[34][1] = (+(sqrt((114. + 3. * sqrt(583.)) / 287.))) * (1. - (0.5170472951));
                _gp[34][2] = 0.5170472951;

                _weight[35] = ((178981. - 2769. * sqrt(583.)) / 472230.) * (0.6863388717e-1);
                _gp[35][0] = (-(sqrt((114. + 3. * sqrt(583.)) / 287.))) * (1. - (0.5170472951));
                _gp[35][1] = (-(sqrt((114. + 3. * sqrt(583.)) / 287.))) * (1. - (0.5170472951));
                _gp[35][2] = 0.5170472951;

                _weight[36] = (98. / 405.) * (0.1035224075e-1);
                _gp[36][0] = (+(sqrt(6. / 7.))) * (1. - (0.7958514179));
                _gp[36][1] = (0.) * (1. - (0.7958514179));
                _gp[36][2] = 0.7958514179;

                _weight[37] = (98. / 405.) * (0.1035224075e-1);
                _gp[37][0] = (-(sqrt(6. / 7.))) * (1. - (0.7958514179));
                _gp[37][1] = (0.) * (1. - (0.7958514179));
                _gp[37][2] = 0.7958514179;

                _weight[38] = (98. / 405.) * (0.1035224075e-1);
                _gp[38][0] = (0.) * (1. - (0.7958514179));
                _gp[38][1] = (+(sqrt(6. / 7.))) * (1. - (0.7958514179));
                _gp[38][2] = 0.7958514179;

                _weight[39] = (98. / 405.) * (0.1035224075e-1);
                _gp[39][0] = (0.) * (1. - (0.7958514179));
                _gp[39][1] = (-(sqrt(6. / 7.))) * (1. - (0.7958514179));
                _gp[39][2] = 0.7958514179;

                _weight[40] = ((178981. + 2769. * sqrt(583.)) / 472230.) * (0.1035224075e-1);
                _gp[40][0] = (+(sqrt((114. - 3. * sqrt(583.)) / 287.))) * (1. - (0.7958514179));
                _gp[40][1] = (+(sqrt((114. - 3. * sqrt(583.)) / 287.))) * (1. - (0.7958514179));
                _gp[40][2] = 0.7958514179;

                _weight[41] = ((178981. + 2769. * sqrt(583.)) / 472230.) * (0.1035224075e-1);
                _gp[41][0] = (+(sqrt((114. - 3. * sqrt(583.)) / 287.))) * (1. - (0.7958514179));
                _gp[41][1] = (-(sqrt((114. - 3. * sqrt(583.)) / 287.))) * (1. - (0.7958514179));
                _gp[41][2] = 0.7958514179;

                _weight[42] = ((178981. + 2769. * sqrt(583.)) / 472230.) * (0.1035224075e-1);
                _gp[42][0] = (-(sqrt((114. - 3. * sqrt(583.)) / 287.))) * (1. - (0.7958514179));
                _gp[42][1] = (+(sqrt((114. - 3. * sqrt(583.)) / 287.))) * (1. - (0.7958514179));
                _gp[42][2] = 0.7958514179;

                _weight[43] = ((178981. + 2769. * sqrt(583.)) / 472230.) * (0.1035224075e-1);
                _gp[43][0] = (-(sqrt((114. - 3. * sqrt(583.)) / 287.))) * (1. - (0.7958514179));
                _gp[43][1] = (-(sqrt((114. - 3. * sqrt(583.)) / 287.))) * (1. - (0.7958514179));
                _gp[43][2] = 0.7958514179;

                _weight[44] = ((178981. - 2769. * sqrt(583.)) / 472230.) * (0.1035224075e-1);
                _gp[44][0] = (+(sqrt((114. + 3. * sqrt(583.)) / 287.))) * (1. - (0.7958514179));
                _gp[44][1] = (+(sqrt((114. + 3. * sqrt(583.)) / 287.))) * (1. - (0.7958514179));
                _gp[44][2] = 0.7958514179;

                _weight[45] = ((178981. - 2769. * sqrt(583.)) / 472230.) * (0.1035224075e-1);
                _gp[45][0] = (+(sqrt((114. + 3. * sqrt(583.)) / 287.))) * (1. - (0.7958514179));
                _gp[45][1] = (-(sqrt((114. + 3. * sqrt(583.)) / 287.))) * (1. - (0.7958514179));
                _gp[45][2] = 0.7958514179;

                _weight[46] = ((178981. - 2769. * sqrt(583.)) / 472230.) * (0.1035224075e-1);
                _gp[46][0] = (-(sqrt((114. + 3. * sqrt(583.)) / 287.))) * (1. - (0.7958514179));
                _gp[46][1] = (+(sqrt((114. + 3. * sqrt(583.)) / 287.))) * (1. - (0.7958514179));
                _gp[46][2] = 0.7958514179;

                _weight[47] = ((178981. - 2769. * sqrt(583.)) / 472230.) * (0.1035224075e-1);
                _gp[47][0] = (-(sqrt((114. + 3. * sqrt(583.)) / 287.))) * (1. - (0.7958514179));
                _gp[47][1] = (-(sqrt((114. + 3. * sqrt(583.)) / 287.))) * (1. - (0.7958514179));
                _gp[47][2] = 0.7958514179;

                _refGeoPtr->addGaussQuadratureRule(this);
            }

    Pyramid_7_1::~Pyramid_7_1()
          {}

    namespace
    {
        const Pyramid_7_1& instantiatePyramid_7_1 = Pyramid_7_1::Instance();
    }
//---------------------------------------------------------------------------
} // close namespace IntegrationRules
