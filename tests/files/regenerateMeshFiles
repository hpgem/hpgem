#!/bin/bash

# Script to regenerate all meshes for tests (both serial and parallel n = 2)
# based on the the source files in the 'sources' directory.
# It should be invoked as `regenerateMeshFiles [PREPROCESSOR]`.

if [ "$#" -ne 1 ];
then
  echo "Error expected the path to the preprocessor as argument"
  exit 1
fi
if [ ! -x "$1" ]
then
  echo "Can not execute the preprocessor at '$1'"
  exit 1
fi

PREPROCESSOR="$1"

# Setup the folder to store parallel meshes n = 2
parallel_mesh_dir="parallel_meshes"
if [ ! -d $parallel_mesh_dir ]; then
  echo "Parallel meshes directory doesn't exist, creating it..."
  # Attempt to create the directory, abort the whole script if not possible
  mkdir -p $parallel_mesh_dir || { echo "Unable to create parallel meshes directory... ABORTING!" ; exit 1; }
  echo "DONE!"
fi

# Structured meshes generated by the preprocessor
for meshSource in sources/*.hpgem
do
  echo "Meshing ${meshSource}"
  filename=$(basename -- "$meshSource")
  # Name munching
  filename=${filename/source/mesh};
  filename=${filename/Source/Mesh};
  # Serial mesh
  "$PREPROCESSOR" --inFile "$meshSource" --outFile "$filename"
  # Parallel mesh n=2
  "$PREPROCESSOR" -n 2 --inFile "$meshSource" --outFile "$parallel_mesh_dir/${filename}"
done

# GMSH meshes
for meshSource in sources/*.msh
do
  echo "Meshing ${meshSource}"
  filename=$(basename -- "$meshSource")
  # Replacing extension hyb -> hpgem
  filename="${filename%msh}hpgem"
  # Serial mesh
  "$PREPROCESSOR" --inFile "$meshSource" --outFile "$filename"
  # Parallel mesh n=2
  "$PREPROCESSOR" -n 2 --inFile "$meshSource" --outFile "$parallel_mesh_dir/${filename}"
done
# Centaur meshes
for meshSource in sources/*.hyb
do
  echo "Meshing ${meshSource}"
  filename=$(basename -- "$meshSource")
  # Replacing extension hyb -> hpgem
  filename="${filename%hyb}hpgem"
  # Serial mesh
  "$PREPROCESSOR" --inFile "$meshSource" --outFile "$filename"
  # Parallel mesh n=2
  "$PREPROCESSOR" -n 2 --inFile "$meshSource" --outFile "$parallel_mesh_dir/${filename}"
done
